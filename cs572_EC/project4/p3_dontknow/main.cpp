#include <iostream>
using namespace std;

float getOut(float x);

int main() 
{
    const int NUM_POINTS = 81;
    float inputs[NUM_POINTS] = {-40,-39,-38,-37,-36,-35,-34,-33,-32,-31,-30,-29,-28,-27,-26,-25,-24,-23,-22,-21,-20,-19,-18,-17,-16,-15,-14,-13,-12,-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40};
    float outputs[NUM_POINTS] = {52,30.2,23.2,12,0.6,-8,-20.8,-21.8,-27,-33.4,-41,-53.8,-52.8,-61,-55.4,-56,-63.8,-65.8,-60,-55.4,-57,-57.8,-49.8,-42,-42.4,-29,-28.8,-13.8,-13,-1.4,15,-7.5,-5,1.5,1,0.5,-7,2.5,-1,2.5,1,-0.5,5,3.5,-1,1.5,7,-0.5,2,-0.5,10.20537863,12.47229837,12.60292251,14.07559994,12.28493299,19.68999988,20.94679123,19.99243556,21.06059243,22.6242444,18.27989445,14.6015212,12.00004897,22.62273913,20.31713541,24.66839051,28.10083518,31.01892213,27.95303678,28.67447528,35.2514392,31.03233741,29.56048342,34.44107329,31.19301254,35.12186997,36.24506377,31.28759691,34.74938605,44.02769935,43.56472625};

    float out[81];
    for (int i = 0; i < 81; ++i) 
    {
        cout << i << "\t" << outputs[i] << "\t";
        out[i] = getOut(inputs[i]);
        cout << out[i] << endl;
    }
    cout << endl;
    return 0;
}

float getOut(float x)
{
    /*
    // separate tail to be two
      if (x+3.40501 <= 11.9524+2.88043)
      {
          float tmp = (x+12.8615 <= 7.2073/5.11281) ? 7.2073*(-4.63379) : 7.2073/0.717242;
          if (x*0.963943 <= tmp)
          {
              if (x+3.40501 <= 7.2073*(-4.63379) )
                  return 2.88043 + 11.9524;
              else
                  return 7.2073/5.11281 ;
          } else
              return x-14.3528;
      } else
          return x*0.963943;
    */
    
      /*  
    if ( (-12.9791*4.26576) <= (3.66944*X) )
    {
        return X;
    } else 
    {
        if ( (-14.8133*2.43627) <= (1.72585+X) )
        {
            if ( (-13.4297*4.39946) <= (1.72585*X) )
                return -12.0185*2.02673;
            else
                return 1.72585/5.49808;
        } else 
            return -4.99814-X;
    }
      */
      
    /*
    // solution 1
    if ( (-1.11176-12.2229) <= (x+2.36866) )
        return x+0.267406;
    else 
    {
        if ( (-2.49308*12.0483)<=(x+0.267406) )
            return -4*12.0483;
        else 
        {
            if ( (-2.60372*12.2229)<=(x+4.93333) )
                return -2.11954*8.68027;
            else
                return 14.6801+14.6801;
        }
    }
    */
    
}

